name: Auto Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  bump-version-and-release:
    name: Bump Version and Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(grep '^version = ' Cargo.toml | head -n1 | cut -d'"' -f2)
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Calculate new version
        id: new_version
        run: |
          CURRENT="${{ steps.current_version.outputs.version }}"
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"
          
          case "${{ github.event.inputs.version_bump }}" in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Update Cargo.toml
        run: |
          sed -i.bak 's/^version = ".*"/version = "${{ steps.new_version.outputs.version }}"/' Cargo.toml
          rm -f Cargo.toml.bak
          cat Cargo.toml | grep "^version"

      - name: Update Cargo.lock
        run: |
          cargo build --release --verbose
          git add Cargo.lock

      - name: Commit version bump
        run: |
          git add Cargo.toml
          git commit -m "chore: bump version to ${{ steps.new_version.outputs.version }}"
          git push origin main

      - name: Create and push tag
        run: |
          git tag -a "${{ steps.new_version.outputs.tag }}" -m "Release ${{ steps.new_version.outputs.tag }}"
          git push origin "${{ steps.new_version.outputs.tag }}"

      - name: Wait for release workflow
        run: |
          echo "Version bumped to ${{ steps.new_version.outputs.version }}"
          echo "Tag ${{ steps.new_version.outputs.tag }} created"
          echo "Release workflow will start automatically"
          echo "Check: https://github.com/${{ github.repository }}/actions"

