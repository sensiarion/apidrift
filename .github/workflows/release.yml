name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: apidrift
            asset_name: apidrift-linux-x86_64.tar.gz
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: apidrift
            asset_name: apidrift-linux-arm64.tar.gz
            cross: true
          - os: macos-13
            target: x86_64-apple-darwin
            artifact_name: apidrift
            asset_name: apidrift-macos-x86_64.tar.gz
          - os: macos-14
            target: aarch64-apple-darwin
            artifact_name: apidrift
            asset_name: apidrift-macos-arm64.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: apidrift.exe
            asset_name: apidrift-windows-x86_64.zip
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.cross
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Build
        run: cargo build --release --target ${{ matrix.target }} --verbose

      - name: Create archive (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} artifacts/
          cd artifacts
          tar -czf ${{ matrix.asset_name }} ${{ matrix.artifact_name }}
          mv ${{ matrix.asset_name }} ..

      - name: Create archive (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts
          Copy-Item target/${{ matrix.target }}/release/${{ matrix.artifact_name }} artifacts/
          Compress-Archive -Path artifacts/${{ matrix.artifact_name }} -DestinationPath ${{ matrix.asset_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}
          retention-days: 1

  create-release:
    name: Create Release
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          # artifacts/artifact-name/file pattern in v4, so we need to handle subdirectories
          find artifacts -type f \( -name "*.tar.gz" -o -name "*.zip" \) -exec cp {} release-assets/ \;
          ls -lah release-assets/
          echo "Files to upload:"
          ls -1 release-assets/

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOF'
          ## 🚀 Release ${{ steps.get_version.outputs.version }}

          ### 📦 Installation

          **Quick install (Linux/macOS):**
          ```bash
          curl -sSfL https://raw.githubusercontent.com/sensiarion/apidrift/main/install.sh | bash
          ```

          **Or download binaries directly:**

          - **Linux (x86_64)**: [apidrift-linux-x86_64.tar.gz](https://github.com/sensiarion/apidrift/releases/download/${{ steps.get_version.outputs.version }}/apidrift-linux-x86_64.tar.gz)
          - **Linux (ARM64)**: [apidrift-linux-arm64.tar.gz](https://github.com/sensiarion/apidrift/releases/download/${{ steps.get_version.outputs.version }}/apidrift-linux-arm64.tar.gz)
          - **macOS (Intel)**: [apidrift-macos-x86_64.tar.gz](https://github.com/sensiarion/apidrift/releases/download/${{ steps.get_version.outputs.version }}/apidrift-macos-x86_64.tar.gz)
          - **macOS (Apple Silicon)**: [apidrift-macos-arm64.tar.gz](https://github.com/sensiarion/apidrift/releases/download/${{ steps.get_version.outputs.version }}/apidrift-macos-arm64.tar.gz)
          - **Windows (x86_64)**: [apidrift-windows-x86_64.zip](https://github.com/sensiarion/apidrift/releases/download/${{ steps.get_version.outputs.version }}/apidrift-windows-x86_64.zip)

          ### 📝 Changes

          See the commits included in this release for details.
          EOF
          cat release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-assets/*
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
