name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

  build-linux:
    name: Build Linux (x86_64)
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build
        run: cargo build --release --verbose

      - name: Create archive
        run: |
          mkdir -p artifacts
          cp target/release/apidrift artifacts/
          cd artifacts
          tar -czf apidrift-linux-x86_64.tar.gz apidrift

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./artifacts/apidrift-linux-x86_64.tar.gz
          asset_name: apidrift-linux-x86_64.tar.gz
          asset_content_type: application/gzip

  build-linux-arm64:
    name: Build Linux (ARM64)
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: aarch64-unknown-linux-gnu

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          cargo build --release --target aarch64-unknown-linux-gnu --verbose
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: Create archive
        run: |
          mkdir -p artifacts
          cp target/aarch64-unknown-linux-gnu/release/apidrift artifacts/
          cd artifacts
          tar -czf apidrift-linux-arm64.tar.gz apidrift

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./artifacts/apidrift-linux-arm64.tar.gz
          asset_name: apidrift-linux-arm64.tar.gz
          asset_content_type: application/gzip

  build-macos:
    name: Build macOS (x86_64)
    runs-on: macos-13
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build
        run: cargo build --release --verbose

      - name: Create archive
        run: |
          mkdir -p artifacts
          cp target/release/apidrift artifacts/
          cd artifacts
          tar -czf apidrift-macos-x86_64.tar.gz apidrift

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./artifacts/apidrift-macos-x86_64.tar.gz
          asset_name: apidrift-macos-x86_64.tar.gz
          asset_content_type: application/gzip

  build-macos-arm64:
    name: Build macOS (ARM64/Apple Silicon)
    runs-on: macos-14
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build
        run: cargo build --release --verbose

      - name: Create archive
        run: |
          mkdir -p artifacts
          cp target/release/apidrift artifacts/
          cd artifacts
          tar -czf apidrift-macos-arm64.tar.gz apidrift

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./artifacts/apidrift-macos-arm64.tar.gz
          asset_name: apidrift-macos-arm64.tar.gz
          asset_content_type: application/gzip

  build-windows:
    name: Build Windows (x86_64)
    runs-on: windows-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build
        run: cargo build --release --verbose

      - name: Create archive
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts
          Copy-Item target/release/apidrift.exe artifacts/
          Compress-Archive -Path artifacts/apidrift.exe -DestinationPath artifacts/apidrift-windows-x86_64.zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./artifacts/apidrift-windows-x86_64.zip
          asset_name: apidrift-windows-x86_64.zip
          asset_content_type: application/zip

